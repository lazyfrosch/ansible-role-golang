- name: Check if we can write to {{ golang_installation_system }}
  ansible.builtin.stat:
    path: "{{ golang_installation_system }}"
  register: _stat_installation_system
  failed_when: false

- name: Set variables for installation to system
  ansible.builtin.set_fact:
    _install_target: '{{ golang_installation_system }}'
    _install_to_system: true
  when: _stat_installation_system.stat.exists and _stat_installation_system.stat.writeable

- name: Set variables for installation as user
  ansible.builtin.set_fact:
    _install_target: '{{ golang_installation_user }}'
    _install_to_system: false
  when: _install_to_system is not defined

- name: Determine latest version when requested
  when: golang_version == "latest"
  block:
    - name: Download release info
      ansible.builtin.uri:
        url: "{{ golang_download_source }}/?mode=json"
        headers:
          Accept: application/json
        return_content: true
      check_mode: false
      register: _releases

    - name: Store fact for latest version
      ansible.builtin.set_fact:
        _latest_version_info: "{{ _releases.json[0] }}"
        _latest_version: "{{ _releases.json[0].version | regex_replace('^go', '') }}"
